name: CPA Funnel Automation Tests

on:
  # Run on pushes to main branch
  push:
    branches: [ main, master ]
  
  # Run on pull requests
  pull_request:
    branches: [ main, master ]
  
  # Allow manual triggering
  workflow_dispatch:
  
  # Schedule daily tests at 6 AM UTC (2 AM EST)
  schedule:
    - cron: '0 6 * * *'

jobs:
  funnel-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Test on multiple browsers
        browser: [chromium, firefox, webkit]
      fail-fast: false # Continue testing other browsers even if one fails
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install
        npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Validate config file
      run: |
        if [ ! -f "wfh_localjobmatcher.json" ]; then
          echo "❌ Config file not found!"
          exit 1
        fi
        echo "✅ Config file found"
        node -e "JSON.parse(require('fs').readFileSync('wfh_localjobmatcher.json'))" && echo "✅ Valid JSON"
    
    - name: Run CPA Funnel Tests
      env:
        BROWSER: ${{ matrix.browser }}
        HEADLESS: true
        CI: true
      run: |
        echo "🧪 Starting funnel test with ${{ matrix.browser }}"
        timeout 300 node test-funnel.js || echo "Test timed out after 5 minutes"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}-${{ github.run_number }}
        path: |
          *test-results*.json
          failure-*.png
          videos/
        retention-days: 30
    
    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: failure-screenshots-${{ matrix.browser }}-${{ github.run_number }}
        path: failure-*.png
        retention-days: 7
    
    - name: Comment PR with results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          let results = '';
          
          try {
            if (fs.existsSync('test-results.json')) {
              const data = JSON.parse(fs.readFileSync('test-results.json'));
              const status = data.success ? '✅ PASSED' : '❌ FAILED';
              const duration = Math.round(data.totalDuration / 1000);
              
              results = `## 🧪 CPA Funnel Test Results (${{ matrix.browser }})
              
              **Status:** ${status}
              **Duration:** ${duration}s
              **Pages Tested:** ${data.pageResults.length}
              **Success Rate:** ${data.pageResults.filter(p => p.success).length}/${data.pageResults.length}
              `;
              
              if (!data.success && data.errors.length > 0) {
                results += `\n**Errors:**\n${data.errors.map(e => `- ${e}`).join('\n')}`;
              }
            }
          } catch (error) {
            results = `## 🧪 CPA Funnel Test Results (${{ matrix.browser }})
            
            **Status:** ❌ FAILED (Could not read results)
            **Error:** ${error.message}`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: results
          });

  # Aggregate results from all browsers
  aggregate-results:
    runs-on: ubuntu-latest
    needs: funnel-test
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        pattern: test-results-*
        merge-multiple: true
    
    - name: Generate summary report
      run: |
        echo "# 📊 CPA Funnel Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Browser | Status | Duration | Success Rate |" >> $GITHUB_STEP_SUMMARY
        echo "|---------|--------|----------|--------------|" >> $GITHUB_STEP_SUMMARY
        
        for file in *test-results*.json; do
          if [ -f "$file" ]; then
            browser=$(echo "$file" | grep -o 'chromium\|firefox\|webkit' || echo "unknown")
            status=$(jq -r '.success' "$file" 2>/dev/null || echo "false")
            duration=$(jq -r '.totalDuration' "$file" 2>/dev/null || echo "0")
            success_count=$(jq -r '.pageResults | map(select(.success)) | length' "$file" 2>/dev/null || echo "0")
            total_count=$(jq -r '.pageResults | length' "$file" 2>/dev/null || echo "0")
            
            status_emoji=$([ "$status" = "true" ] && echo "✅" || echo "❌")
            duration_sec=$((duration / 1000))
            
            echo "| $browser | $status_emoji | ${duration_sec}s | $success_count/$total_count |" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Test completed at:** $(date)" >> $GITHUB_STEP_SUMMARY

  # Optional: Send notifications on failure
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: funnel-test
    if: failure() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Send notification
      run: |
        echo "🚨 CPA Funnel tests failed on main branch!"
        echo "Check the GitHub Actions logs for details."
        # Add your notification logic here (Slack, Discord, email, etc.)
